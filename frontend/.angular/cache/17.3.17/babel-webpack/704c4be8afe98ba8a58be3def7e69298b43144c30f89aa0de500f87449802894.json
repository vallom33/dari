{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { SearchFiltersComponent } from \"../../components/search-filters/search-filters.component\";\nimport { HouseCardComponent } from \"../../components/house-card/house-card.component\";\nlet HousesComponent = class HousesComponent {\n  constructor(houseService) {\n    this.houseService = houseService;\n    this.houses = [];\n    this.loading = true;\n    this.currentPage = 0;\n    this.totalPages = 0;\n    this.totalElements = 0;\n    this.pageSize = 12;\n    this.currentFilters = {};\n  }\n  ngOnInit() {\n    this.loadHouses();\n  }\n  loadHouses(page = 0) {\n    this.loading = true;\n    this.currentPage = page;\n    const searchRequest = {\n      ...this.currentFilters,\n      page: page,\n      size: this.pageSize\n    };\n    const request = Object.keys(this.currentFilters).length > 0 ? this.houseService.searchHouses(searchRequest) : this.houseService.getAllHouses(page, this.pageSize);\n    request.subscribe({\n      next: response => {\n        this.houses = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.loading = false;\n      },\n      error: error => {\n        console.error(\"Error loading houses:\", error);\n        this.loading = false;\n      }\n    });\n  }\n  onFiltersChanged(filters) {\n    this.currentFilters = filters;\n    this.loadHouses(0); // Reset to first page when filters change\n  }\n  onPageChange(page) {\n    if (page >= 0 && page < this.totalPages) {\n      this.loadHouses(page);\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }\n  get pageNumbers() {\n    const pages = [];\n    const maxVisiblePages = 5;\n    const startPage = Math.max(0, this.currentPage - Math.floor(maxVisiblePages / 2));\n    const endPage = Math.min(this.totalPages - 1, startPage + maxVisiblePages - 1);\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n};\nHousesComponent = __decorate([Component({\n  selector: \"app-houses\",\n  standalone: true,\n  imports: [CommonModule, RouterModule, SearchFiltersComponent, HouseCardComponent],\n  templateUrl: \"./houses.component.html\",\n  styleUrls: [\"./houses.component.scss\"]\n})], HousesComponent);\nexport { HousesComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","SearchFiltersComponent","HouseCardComponent","HousesComponent","constructor","houseService","houses","loading","currentPage","totalPages","totalElements","pageSize","currentFilters","ngOnInit","loadHouses","page","searchRequest","size","request","Object","keys","length","searchHouses","getAllHouses","subscribe","next","response","content","error","console","onFiltersChanged","filters","onPageChange","window","scrollTo","top","behavior","pageNumbers","pages","maxVisiblePages","startPage","Math","max","floor","endPage","min","i","push","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\user\\Desktop\\house\\my-app\\frontend\\src\\app\\pages\\houses\\houses.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { RouterModule } from \"@angular/router\"\nimport type { HouseService, PageResponse } from \"../../services/house.service\"\nimport type { House, SearchFilters } from \"../../models/house.model\"\nimport { SearchFiltersComponent } from \"../../components/search-filters/search-filters.component\"\nimport { HouseCardComponent } from \"../../components/house-card/house-card.component\"\n\n@Component({\n  selector: \"app-houses\",\n  standalone: true,\n  imports: [CommonModule, RouterModule, SearchFiltersComponent, HouseCardComponent],\n  templateUrl: \"./houses.component.html\",\n  styleUrls: [\"./houses.component.scss\"],\n})\nexport class HousesComponent implements OnInit {\n  houses: House[] = []\n  loading = true\n  currentPage = 0\n  totalPages = 0\n  totalElements = 0\n  pageSize = 12\n  currentFilters: SearchFilters = {}\n\n  constructor(private houseService: HouseService) {}\n\n  ngOnInit() {\n    this.loadHouses()\n  }\n\n  loadHouses(page = 0) {\n    this.loading = true\n    this.currentPage = page\n\n    const searchRequest = {\n      ...this.currentFilters,\n      page: page,\n      size: this.pageSize,\n    }\n\n    const request =\n      Object.keys(this.currentFilters).length > 0\n        ? this.houseService.searchHouses(searchRequest)\n        : this.houseService.getAllHouses(page, this.pageSize)\n\n    request.subscribe({\n      next: (response: PageResponse<House>) => {\n        this.houses = response.content\n        this.totalPages = response.totalPages\n        this.totalElements = response.totalElements\n        this.loading = false\n      },\n      error: (error) => {\n        console.error(\"Error loading houses:\", error)\n        this.loading = false\n      },\n    })\n  }\n\n  onFiltersChanged(filters: SearchFilters) {\n    this.currentFilters = filters\n    this.loadHouses(0) // Reset to first page when filters change\n  }\n\n  onPageChange(page: number) {\n    if (page >= 0 && page < this.totalPages) {\n      this.loadHouses(page)\n      window.scrollTo({ top: 0, behavior: \"smooth\" })\n    }\n  }\n\n  get pageNumbers(): number[] {\n    const pages: number[] = []\n    const maxVisiblePages = 5\n    const startPage = Math.max(0, this.currentPage - Math.floor(maxVisiblePages / 2))\n    const endPage = Math.min(this.totalPages - 1, startPage + maxVisiblePages - 1)\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i)\n    }\n    return pages\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}